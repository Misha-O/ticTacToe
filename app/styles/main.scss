// colors
$backgroundColor: rgb(221, 221, 221);
$colorShadeA: rgb(246, 241, 209);
$colorShadeA: rgb(106, 163, 137);
$colorShadeB: rgb(121, 186, 156);
$colorShadeC: rgb(150, 232, 195);
$colorShadeD: rgb(187, 232, 211);
$colorShadeE: rgb(205, 255, 232);
// size
$cellSize: 110px;
$markSize: calc($cellSize * 0.9);

// normilize
@import "../../node_modules/normalize.css/normalize.css";
// fonts
@import url("https://fonts.googleapis.com/css2?family=Bitter:ital@0;1&display=swap");

body {
  background: $backgroundColor;
}

section {
  text-align: center;

  & h1 {
    text-transform: uppercase;
    color: #d54d7b;
    font-family: "Comic Sans", cursive;
    font-size: 7rem;
    line-height: 160px;
    font-weight: normal;
    margin-bottom: 0px;
    margin-top: 40px;
    text-align: center;
    text-shadow: 0 1px 1px #fff;
  }

  & .container {
    width: 100vw;
    height: 100vh;
  }
}
.game__container {
  display: grid;
  justify-content: center;
  justify-items: center;
  align-content: center;
  align-items: center;
  grid-template-columns: repeat(3, auto);
  width: 336px;
  margin: 30px auto;

  &.x .game__cell:not(.x):not(.circle):hover::before,
  &.x .game__cell:not(.x):not(.circle):hover::after {
    content: "";
    position: absolute;
    width: 100px;
    height: 12px;
    background: rgba(169, 209, 255, 0.883);
  }
  &.x .game__cell:not(.x):not(.circle):hover::before {
    transform: rotateZ(45deg);
  }
  &.x .game__cell:not(.x):not(.circle):hover::after {
    transform: rotateZ(-45deg);
  }

  &.circle .game__cell:not(.x):not(.circle):hover::before,
  &.circle .game__cell:not(.x):not(.circle):hover::after {
    content: "";
    position: absolute;
    border-radius: 50%;
    background: rgb(255, 202, 183);
  }
  &.circle .game__cell:not(.x):not(.circle):hover::before {
    width: 100px;
    height: 100px;
  }
  &.circle .game__cell:not(.x):not(.circle):hover::after {
    width: 80px;
    height: 80px;
    background: $backgroundColor;
  }

  & .game__cell {
    width: $cellSize;
    height: $cellSize;
    box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,
      rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;
    cursor: pointer;
    border: 1px solid rgba(60, 64, 67, 0.3);
    line-height: 100px;
    font-size: 60px;
    display: flex;
    justify-content: center;
    align-items: center;
  }
}
.game__cell.x {
  position: relative;

  &::before,
  &::after {
    content: "";
    position: absolute;
    width: 100px;
    height: 12px;
    background: dodgerblue;
  }
  &::before {
    transform: rotateZ(45deg);
  }
  &::after {
    transform: rotateZ(-45deg);
  }
}
.game__cell.circle {
  position: relative;

  &::before,
  &::after {
    content: "";
    position: absolute;
    border-radius: 50%;
    background: coral;
  }
  &::before {
    width: 100px;
    height: 100px;
  }
  &::after {
    width: 80px;
    height: 80px;
    background: $backgroundColor;
  }
}

.game__cell.x,
.game__cell.circle {
  cursor: not-allowed;
}

.game__status {
  text-transform: uppercase;
  color: #333333;
  font-family: "Bitter", serif;
  font-size: 2.6rem;
  font-weight: normal;
  line-height: 54px;
  margin: 0 0 1.5rem;
}

button {
  position: relative;
  display: inline-block;
  cursor: pointer;
  outline: none;
  border: 0;
  vertical-align: middle;
  text-decoration: none;
  font-size: 1.5rem;
  color: $colorShadeA;
  font-weight: 700;
  text-transform: uppercase;
  font-family: inherit;
}

button.restart {
  padding: 1em 2em;
  border: 2px solid $colorShadeA;
  border-radius: 1em;
  background: $colorShadeE;
  transform-style: preserve-3d;
  transition: all 175ms cubic-bezier(0, 0, 1, 1);
}
button.restart::before {
  position: absolute;
  content: "";
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: $colorShadeC;
  border-radius: inherit;
  box-shadow: 0 0 0 2px $colorShadeB, 0 0.75em 0 0 $colorShadeA;
  transform: translate3d(0, 0.75em, -1em);
  transition: all 175ms cubic-bezier(0, 0, 1, 1);
}

button.restart:hover {
  background: $colorShadeD;
  transform: translate(0, 0.375em);
}

button.restart:hover::before {
  transform: translate3d(0, 0.75em, -1em);
}

button.restart:active {
  transform: translate(0em, 0.75em);
}

button.restart:active::before {
  transform: translate3d(0, 0, -1em);

  box-shadow: 0 0 0 2px $colorShadeB, 0 0.25em 0 0 $colorShadeB;
}

.overlay--msg {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
  align-items: center;
  color: white;
  text-transform: uppercase;
  font-size: 5rem;
  display: none;
}
.overlay--msg.show {
  display: flex;
}
